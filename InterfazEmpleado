using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Interfaces
{

    //Todos los metodos creados por Niels Bosch
    // ultima edicion >> 30/10/2015
    class InterfazEmpleado
    {
        string dni = null; //esto lo vamos a usar para pedir el DNI. Lo uso en el metodo devolver DNI la cosa es que todavia no ha llegado ruben a la parte del codigo 
        //donde le pide al usuario el dni. Esta variable esta "de mientras" para simularlo.




        public static void MenuPrincipalEmpleados()
        {
            byte opcion = 0;
            string aux = null;
            bool correcto = false;
            bool error = false;
            string mensaje = null;
            string empleadoDni = null;
            string empleadoaeliminar = null;
            string empleadoApellido = null;
            string empleadoNombre = null;


            Console.Clear();
            Console.ForegroundColor = ConsoleColor.Green;
            Console.WriteLine("");
            Console.WriteLine("                    G E S T I Ó N  DE  N Ó M I N A S");
            Console.WriteLine("\t----------------------------------------------------------");
            Console.WriteLine("");
            Console.Write("\t\t1. Registrar Empleado\n");
            Console.Write("\t\t2. Modificar Empleado\n");
            Console.Write("\t\t3. Listar Empleados\n");
            Console.Write("\t\t4. Dar de baja\n\n");
            Console.Write("\t\t0. Salir\t\n\n");
            Console.WriteLine("\t----------------------------------------------------------");
            Console.ResetColor();
            Console.ForegroundColor = ConsoleColor.Gray;
            Console.WriteLine("\tPulse 0 para volver al Menú Principal...");
            Console.ResetColor();
            Console.ReadLine();

            if (Byte.TryParse(aux, out opcion) && (opcion >= 0) && (opcion <= 4))
            {
                correcto = true;
            }
            else
            {
                error = true;
                mensaje = "Opción incorrecta (seleccione una opción válida: 0 - 2)";

            }
            switch (opcion)
            { //CODIGO CREADO POR NIELSBOSCH
                case 1:
                    //VERSION CUTRE DEL INTERFAZ, ESTO OBV. TIENE QUE ESTAR MEJOR PERO ES PARA QUE COGA LA IDEA RUBEN

                    Console.Write("DNI del nuevo empleado \n");
                    empleadoDni = Console.ReadLine();
                    Console.Write("Nombre del Empleado: \n");
                    empleadoNombre = Console.ReadLine();
                    Console.Write("Apellido del Empleado: \n");
                    empleadoApellido = Console.ReadLine();

                    NuevoEmpleado(empleadoNombre, empleadoApellido,empleadoDni); //ESto en principio envia los parametros de arriba al metodo de nuevo empleado que lo crea

                    // ------ POR HACER: RECIBIR MENSAJE DE ERROR Y MOSTRARLO---------
                    break;

                case 2:


                    ListarEmpleados(empleados); //aqui hay que pasarle el array empleados, esta en rojo porque todavia no esta declarado en la clase.


                    // ------ POR HACER: RECIBIR MENSAJE DE ERROR Y MOSTRARLO---------
                    break;

                case 3:


                    // ------ POR HACER: RECIBIR MENSAJE DE ERROR Y MOSTRARLO---------
                    break;

                case 4:
                    //VERSION CUTRE DEL INTERFAZ, ESTO OBV. TIENE QUE ESTAR MEJOR PERO ES PARA QUE COGA LA IDEA RUBEN
                    bool resultadodeeliminacion = false;
             
                    Console.WriteLine("Inserte DNI del empleado que desea eliminar");
                    empleadoaeliminar = Console.ReadLine();
                    //---- POR HACER: VALIDAR SI EL DNI ES CORRECTO
                    // ----- POR HACER: SI LO ES, COMPROBAR QUE EXISTE, SI EXISTE

                    //llamamos al metodo de eliminar empleado que devuelve un booleano.
                    resultadodeeliminacion = EliminarEmpleado(empleado, empleadoaeliminar);

                    if (!resultadodeeliminacion)
                    {

                        Console.WriteLine("El usuario ha sido eliminado correctamente");
                        
                    }
                    else
                    {

                       //AQUI LAS COSAS PARA RECIBIR EL ERROR Y MOSTRARLO Y ESAS TONTERIAS
                    }

                    
                    // ------ POR HACER: RECIBIR MENSAJE DE ERROR Y MOSTRARLO---------
                    break;
            }


        }

        //TODOS LOS METODOS DE AQUI, CREADOS POR NIELSBOSCH
        public string SolicitarDni(){
            //DUDA: Simplemente devolver DNI o hay que especificar cosas del array empleado? (DUDA PARA SAMU) 
            return dni;

        }

        //Metodo ListarUnicoEmpleado
        //Recibe un DNI y en funcion a esto, muestra los demas datos.
        public void ListarUnicoEmpleado(Empleado empleado, string recibirdni) //recibe un DNI para saber el empleado que tiene que mostrar.
        {
            bool siExiste;
            string mensaje;

            
            siExiste = GestionEmpleado.ExisteEmpleado(empleado.DNI, recibirdni); //devuelve true o false para ver si existe el empleado que se desea listar.
                                                                              //usa el metodo existeempelado de la clase GestionEmpleado

            if(!siExiste){
                Cabecera(); 
            Console.WriteLine("DNI Del Empleado solicitado" + recibirdni);
            Console.WriteLine("Nombre Del Empleado solicitado" + recibirdni);
            Console.WriteLine("Apellido Del Empleado solicitado" + recibirdni);
            }
            else{
                mensaje = "No existe el empleado que esta solicitando";
            }
        }
        public static void ListarEmpleados(Empleados[] lista)
        {
            int indice = 0;

            Cabecera(); 
            Console.WriteLine("\t LISTADO DE EMPLEADOS");
           

            for (indice = 0; indice < lista.Length; indice++) //bucle que aumenta el numero del indice
            {
                MostrarEmpleado(lista[indice]);
            }
        }
        public static void MostrarEmpleado(Empleado empleado) //muestra un unico empleado depediendo del indice que recibe. Este metodo es usado por el metodo ListaEmpleados
                                                                //ademas sirve para listar un unico empleado.
        {
            Cabecera(); 

            Console.WriteLine("DNI: " + empleado.DNI);
            Console.WriteLine("Nombre: " + empleado.NOMBRE);
            Console.WriteLine("Apellido: " + empleado.Apellido);
        }
        public static bool Continuar(string message) //CODIGO COPIADO TAL Y CUAL DEL EJERCICIO DE JESUS. ESTE COMENTARIO BORRARLO ANTES DE SUBIRLO Y MODIFICAR UN POCO LOS NOMBRES
                                                     //DE LOS VARIABLES, PARA DISIMULAR :P
        {
            bool seguir = false;    // Control de la confirmación
            string aux = null;

            // ENTRADA
            Console.Write(message);
            aux = Console.ReadLine();
            aux = aux.Trim().ToLower(); // Métodos en cadena: 1º limpia ; 2º minúsculas

            // VALIDACION --> PENDIENTE

            // PROCESAMIENTO
            if ((aux != "") && (aux[0] == 's')) seguir = true;   // Sólo true si 's', false en resto de casos

            // SALIDA
            return seguir;
        }
    }
}
