using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
//creado por Pedro Canovas el dia 19/11/2015
namespace BancoNomina
{	//Última comprobación: 28/11/2015
    static class GestiónNomina
    {
        // Desarrollador: Pedro Cánovas Medina
        // Fecha de creación: 23/11/2015
        // Método Privado: Comprueba existencia de nominas
        private static bool ExisteNomina(Nomina[] listaDni, string dni)
        {
            bool existe = false;
            int indice = 0;

            if (listaDni != null)
            {
                // Recorre la lista de nominas hasta que:
                //      Peor caso: Realiza un recorrido completo (No lo encuentra)
                //      Mejor caso: Encuentra equivalencia
                for (indice = 0; (indice < listaDni.Length) && !existe; indice++)
                {
                    if (listaDni[indice].Dni.Equals(dni)) existe = true;
                }
            }

            return existe;
        }

        // Método Privado: Comprueba existencia de nominas ya registradas
        // Si existe, indica la posición (índice) en el que se encuentra
        private static bool ExisteNomina(Nomina[] listaDni, string dni, ref int posicion)
        {
            bool existe = false;    // Control de existencia
            int indice = 0;

            if (listaDni != null)
            {
                // Recorre la lista de nominas hasta que:
                //      Peor caso: Realiza un recorrido completo (No lo encuentra)
                //      Mejor caso: Encuentra equivalencia
                for (indice = 0; (indice < listaDni.Length) && !existe; indice++)
                {
                    if (listaDni[indice].Dni.Equals(dni))
                    {
                        existe = true;
                        posicion = indice;
                    }
                }
            }

            return existe;
        }


        // Método público: Añadir nueva nomina - esto lo haremos desde el main: ControladorNomina.NuevaNomina()
        public static void NuevaNomina()
        {
            Nomina nominaTemp;          // Datos de la nomina a añadir
            Nomina[][] copia = null;    // Lista temporal de nominas
        
            bool salir = false;
            string mensaje = null;
            
            // Entrada de Datos
            do
            {
                // ENTRADA de datos para la nomina, como vamos a crearla nueva, pedimos los datos de la primera semana
                nominaTemp = Interfaz.DatosNominaSemana();  // Solicitud de Datos para crear la nomina
                //se debera de crear el flujo para solicitar las semanas una a una
		//una vez rellenado el array nominaTemp, se lo mandamos a Samu para que cree el file
                // PROCESAMIENTO
                // Validación: Comprobar si la nomina existe
                if (!ExisteNomina(DatosNomina, nominaTemp.Dni))
                {
                    // Registro Cliente: Gestión Dinámica de Memoria
                   
                    // Almacenamiento de la nomina
                   
			//llamo al metodo de escritura del fichero
			EscribirFichero(nominaTemp);
                    mensaje = "\n\t Nomina registrada correctamente";
                }
                else
                {
                    mensaje = "\n\t El Empleado ya tiene una nomina";
                }

                // SALIDA
                mensaje = mensaje + "\n\n\t Desea seguir operando con nominas? (s/n): ";

                // Sí desea continuar --> salir = false
                // No desea continuar --> salir = true
                salir = Interfaz.Continuar(mensaje) ? false : true;

            } while (!salir);

        }


        // Método público: Mostrar lista de nominas
        public static void ListarNominas(Nomina[] nominas)
        {

            if (nominas != null)
            {
                Interfaz.MostrarListaNominas(nominas);
                Interfaz.Continuar("\n\tPulse ENTER para continuar");
            }
            else
            {
                Interfaz.Continuar("\n\tNo hay nominas que mostrar. \n\tPulse ENTER para continuar");
            }
        }


        // Método público: Eliminar nomina
        public static void EliminarNominaSemana(ref Nomina[] semanas)
        {
            int semana = null;      // que semana se desea eliminar en la nomina
           
            int indice = 0;         // Posición de la semana en la lista de semanas
            string mensaje = null;
            bool salir = false;

            doi
            {
                // ENTRADA: Solicitud de la semana que deseamos eliminar
                semana = Interfaz.SolicitarSemana(semanas,semana);
                indice = semana;
                if (ExisteSemana(semanas, ref indice))
                {
                    
                        //eliminacion de la semana seleccionada
                        //creo un array de tipo RNominas para almacenar el array de nominas original
                        //tiene la longitud del original menos uno porque como vamos a borrar un elemento lo 
                        //hacemos con una dimension menos
                        Nomina[] semanasC = new Nomina[semanas.Length - 1];

                        //recorro desde 0 hasta la longiud del array de copia 
                        //la i es la que controla al array de copia y la j la que controla el array original
                        
                        for (int i = 0, j = 0; i < semanasC.Length; i++, j++)
                        {

                            //si la posicion que queremos borrar (indice) es igual a i, entonces es que ese 
                            //elemento no lo queremos
                            //asi que hacemos que el indice del segundo array de un salto y no pase por 
                            //ese elemento en concreto
                            if (i == indice)
                            {
                                j++;
                            }

                            
                           
                            //voy asignando los elementos que han quedado del array original al array de copia 

                            semanasC[i] = semanas[j];
                        }
                        //como es una dimension menos se sobreescribe al pasarlo
                        semanas = semanasC;

                      
                        
                        Interfaz.MostraNomina(semanas);
                        mensaje = "\n\tSEMANA ELIMINADA CON EXITO\n";

                    



                }
                else
                {
                    mensaje = "\n\tERROR: No se encuentra la semana\n";
                }

                // SALIDA
                mensaje = mensaje + "\n\n\t Desea eliminar otra semana (s/n): ";

                // Sí desea continuar --> salir = false
                // No desea continuar --> salir = true
                salir = Interfaz.Continuar(mensaje) ? false : true;
                // mensaje = mensaje + "\n\tPulse ENTER para continuar";
                //Interfaz.Continuar(mensaje);


            } while (!salir);
	{
	         
	}


        }
        
        
        // Método público: Gestionar las noominas
        public static void GestionNominas(ref Nomina[] nominas)
        {
            string dni = null;      // dni para la búsqueda del usuario
           
            byte opcion;            // Opción del menú
            int indice = 0;         // Posición del cliente en la lista de nominas
            string mensaje = null;
            int semana=0;
            Nomina[] semanasTemp = new Nominas[];

            // ENTRADA: Solicitud del DNI del cliente para gestionar sus nominas
           
            try
            {
                dni = Interfaz.SolicitarDni();
            }
            catch (Exception e)
            {
                
                mensaje = (e.Message.ToString());
            }

            // PROCESO
            // Comprobación de la existencia del Cliente
            if (ExisteCliente(nominas, dni, ref indice))
            {
            	//recogemos la opcion deseada del menu de gestion de nominas
                opcion = Interfaz.MenuGestionNominas();

                switch (opcion)
                {
                    // Salida del Menú de Operación
                    case 0:
                        mensaje = "\n\tSaliendo...\n";
                        break;
                    // Crear Nomina
                    case 1:
                        
                        semanasTemp = Interfaz.PedirDatosSemanas();  // Solicitud de Datos
                        FnomSemanal fs = new FnomSemanal(dni);
                        fs.EscribirFichero(semanasTemp);
                        //samu creo que hace falta aqui que me pidas el dni para saber de quien son las semanas que me tienes que pintar
                        fs.LeerSemanas();
                        //  FichNomSemanal.LeerSemanas(semanasTemp);
                       
                       
                        break;
                    // Editar Nomina
                    case 2:
                        bool salir2 = false;
                        bool respuesta = true;
                        FnomSemanal fs = new FnomSemanal(dni);
                        semanasTemp = fs.LeerSemanas(semanasTemp);
                        Interfaz.ListarSemanas(semanasTemp);
                        Interfaz.EditarDatosSemanas(semanasTemp);  // Solicitud de Datos
                        fs.EscribirFichero();
                       
                        break;

                    case 3:

                        bool close = false;
                        semanasTemp = FichNomSemanal.LeerSemanas(dni);
                        Interfaz.CerrarNomina(semanasTemp);  // Cerrar nomina para confirmar imprension y eliminar
                       
                        Interfaz.ImprimirCerrar();
                        fs.EliminarArchivo();
                        
                        
                        break;
                }
            }
            else
            {
                mensaje = "\n\tERROR: No se encuentra el Cliente\n";
            }

            // SALIDA
            mensaje = mensaje + "\n\tPulse ENTER para continuar";
            Interfaz.Continuar(mensaje);

        }
    }
}


